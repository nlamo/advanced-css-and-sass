/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* Basic reset */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box; /* borders/padding no longer added to total width/height */
}

/* Best practice is to specific anything related to fony in the 'body' element */
body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7;
    color: #777;
    padding: 30px; /* padding does not get inherited, of course */
}

.header {
    position: relative;
    height: 95vh; /* height of the element is always 95% of viewport height */
    background-image: linear-gradient(
        to right bottom,
        rgba(126, 213, 111, 0.8),
        rgba(40, 180, 133, 0.800)),
        url('../img/hero.jpg');
    background-size: cover; /* scales img to provide full coverage while preserving asp ratio */
    background-position: top; /* keeps the top constant as the viewport changes */
    clip-path: polygon(0 0, 100% 0, 100% 75%, 0 100%); /* a polygon for which everything outside the coverage is clipped out */
}

/* Reference is the parent element that has its position set to 'relative' */
.logo-box {
    position: absolute;
    top: 40px;
    left: 40px;
}

.logo {
    height: 35px;
}

/* Interesting trick for positioning with position: absolute and transform: translate() */
.text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%); /* repositions the element */
    text-align: center;
}

.heading-primary {
    color: #FFF;
    text-transform: uppercase;

    backface-visibility: hidden; /* little hack to fix animation shake if it occurs */
    margin-bottom: 60px;
}

/* <span> is inline by default, and block is better for these particular elements */
.heading-primary-main {
    display: block;
    font-size: 60px;
    font-weight: 700; /* font-weight can be specific to particular fonts! perhaps always */
    letter-spacing: 35px;

    animation-name: moveInLeft;
    animation-timing-function: ease-out;
    animation-duration: 1.5s;
}

.heading-primary-sub {
    display: block;
    font-size: 20px;
    font-weight: 400;
    letter-spacing: 17.4px;

    animation: moveInRight ease-out 1.5s;
}

/* animation comes in from the left */
@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-100px);
    }

    80% {
        transform: translatex(10px);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

/* animation comes in from the right */
@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(100px);
    }

    80% {
        transform: translateX(-10px);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

/* animaton comes in from the bottom */
@keyframes moveInFromBottom {
    0% {
        opacity: 0;
        transform: translateY(30px);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

.btn:link,
.btn:visited {
    display: inline-block;
    position: relative;
    text-transform: uppercase;
    text-decoration: none;
    padding: 15px 40px;
    border-radius: 100px;

    transition: all .2s; /* transition property must be on initial state */
}

.btn:hover {
    transform: translateY(-3px);
    box-shadow: 0px 10px 20px rgba(0,0,0,.2);
}

.btn:active {
    transform: translateY(-1px);
    box-shadow: 0px 5px 10px rgba(0,0,0,.2);
}

.btn-white {
    background-color: #FFF;
    color: #777;
}

/* after pseudo-element is actualy the last child of .btn
 * which is why we can set height/width to 100%  
 */
.btn::after {
    position: absolute; 
    top: 0;
    left: 0;
    z-index: -1;
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 200px;

    transition: all .4s;
}

.btn-white::after {
    background-color: #FFF;
}

.btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0;
}

/* this decouples the animation from the button it operates upon, which is good;
 * originally I had set the animation directly to 'btn-white'
 */
.btn-animated {
    animation: moveInFromBottom .5s ease-out .8s;
    animation-fill-mode: backwards; /* applies values from first relevant keyframe during delay */
}